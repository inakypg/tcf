#
# This is a workaround. Why?
#
# By default, openocd installs a rule that makes the /dev/hidraw*
# devices root:root and then sets an ACL on it with uaccess. For
# whichever reason (unknown to me), the ACL mask on it when the GID is
# `root` resets it and it disallows group access to the node, which is
# what we rely on for openocd being able to open it when running from
# inside the ttbd daemon.
# So we force it to be owned by group ttbd so the daemon and its
# subprocesses can read/write to it.
#
# We make it rules level 80 because openocd is at 69
#
KERNEL == "hidraw*", ACTION == "add", ATTRS{product}=="*CMSIS-DAP*", \
    GROUP = "ttbd", MODE = "0660"

#
# Allow user ttbd access to the TAP devices to create virtual
# networks (as we run the ttbd daemon under it).
#
# FIXME: there has to be a better way to do this, because we might
#        conflict with others that need to give access to tap devices
#
SUBSYSTEM == "macvtap", ACTION == "add", KERNEL == "tap*", \
          GROUP = "ttbd", MODE = "0660"


# Set the g+w bit on for the drivers, so ttbd's
# ttbl.power.device_reset_c() driver can reset a device when running
# under the daemon (which has group root for this).
#
# To debug, change this to
#
##     RUN += "/bin/bash -xc 'THECOMMAND >> /tmp/log 2>&1'"
#
# Note some drivers don't offer bind/unbind, so we need to test for that
ACTION == "add", SUBSYSTEM == "drivers", \
    RUN += "/bin/bash -xc '[ -e /sys/%E{DEVPATH}/bind ] && chmod g+w /sys/%E{DEVPATH}/bind /sys/%E{DEVPATH}/unbind'",
